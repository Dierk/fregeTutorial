buildscript { // this should become a dependency of the frege-gradle-plugin in version 0.8
	repositories {
	    mavenLocal()
	    mavenCentral()
	}
	dependencies {
		classpath 'commons-io:commons-io:2.4' // for fregeDoc
	}
}

plugins { 
  id "org.frege-lang" version "0.8" // version is optional, default is latest
  id "application"
}

// set from command line like  -DmainClassName='MyApplication'
mainClassName = System.getProperty('mainClassName')
//mainClassName = 'MyApplication'
//mainClassName = 'CoverFlow'
//mainClassName = 'Pong'

//def jdk8 = System.getProperty('java.version')[0..2].toDouble() == 1.8
//if (! jdk8) {
//    println "You should be using Java 8 since we rely on JavaFX, but you run ${System.'java.version'} ."
//}
ext {
	javaTarget = 1.8
	fregeRelease =  '3.25alpha' //'3.24public'
	fregeVersion = '3.25.84'
}

sourceCompatibility = 1.8
targetCompatibility = javaTarget


ant.mkdir(dir: "${rootProject.projectDir}/lib/org/frege-lang/frege/${fregeVersion}")
ant.get(src: "https://github.com/Frege/frege/releases/download/${fregeRelease}/frege${fregeVersion}.jar",
		dest: "${rootProject.projectDir}/lib/org/frege-lang/frege/${fregeVersion}/frege-${fregeVersion}.jar",
		skipexisting: 'true')


repositories {
    mavenLocal()
    jcenter()
	maven { // for the snapshots -- only if you need the repl. or FregeFX
		url = "https://oss.sonatype.org/content/groups/public"
	}
	maven {
		url = "${rootProject.projectDir}/lib"
	}
}

dependencies {
    // CHANGE NEXT LINE BELOW IF YOU WANT TO USE A DIFFERENT COMPILER
	compile 'org.frege-lang:frege:3.25.84'

//    compile 'org.frege-lang:frege-repl-core:1.4-SNAPSHOT'  // only if you need the repl
    //compile 'org.frege-lang:frege-native-gen:1.3' // only if you need native-gen

    compile 'org.frege-lang:fregefx:0.8' // only if you need FregeFX
}

compileFrege {
	target = javaTarget
}
compileTestFrege {
	target = javaTarget
}


fregeDoc {
	verbose = true
	module  = "$buildDir/classes/main" // should become default
}

//fregeQuickCheck {
//    help = true          // default: false
//    listAvailable = true // default: false // true will not run the tests
//    verbose = false      // default: true  // false is _very_ silent
//    num = 500            // default: 100
//    includePredicates = ['myFirstPred', 'mySecondPred']
//    excludePredicates = ['myFirstPred', 'mySecondPred']
//    moduleName = 'DummyTest'         // prio 1
//    moduleJar  = 'path/to/my/module.jar'  // prio 2
//    moduleDir  = "$project.buildDir/classes/test" // prio 3, default
//    classpathDirectories = ["$project.buildDir/classes/main", "$project.buildDir/classes/test"]
//    allJvmArgs = ['-Xss4M']
//}


